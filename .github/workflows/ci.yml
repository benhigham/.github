# Comprehensive CI workflow with linting, type checking, testing, and building.
# Supports Node.js version matrix testing and optional coverage upload.
# All steps are optional and can be configured individually.
name: CI

on:
  workflow_call:
    inputs:
      node-version:
        description: |
          The version of Node.js to use (supports the Semantic Versioning Specification, e.g. 18.x, ^20.10.0, >=21)
          If not specified, the version will be read from package.json.
        type: string
        required: false
      node-version-matrix:
        description: |
          JSON array of Node.js versions to test against (e.g. '["18", "20", "22"]')
          If specified, overrides node-version and runs tests across multiple versions.
        type: string
        required: false
      pnpm-version:
        description: |
          The version of pnpm to use (supports the Semantic Versioning Specification, e.g. 8, 10.7.0, latest)
          If not specified, the version will be read from package.json.
        type: string
        required: false
      run-lint:
        description: Whether to run the lint step
        type: boolean
        default: true
        required: false
      lint-command:
        description: The command to run for linting
        type: string
        default: pnpm run lint
        required: false
      run-typecheck:
        description: Whether to run the type checking step
        type: boolean
        default: true
        required: false
      typecheck-command:
        description: The command to run for type checking
        type: string
        default: pnpm run typecheck
        required: false
      run-test:
        description: Whether to run tests
        type: boolean
        default: true
        required: false
      test-command:
        description: The command to run tests
        type: string
        default: pnpm run test
        required: false
      run-build:
        description: Whether to run the build step
        type: boolean
        default: false
        required: false
      build-command:
        description: The command to run for building
        type: string
        default: pnpm run build
        required: false
      upload-coverage:
        description: Whether to upload coverage reports as artifacts
        type: boolean
        default: false
        required: false
      coverage-path:
        description: Path to coverage reports
        type: string
        default: coverage
        required: false

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    if: inputs.run-lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Setup Node.js with pnpm
        uses: benhigham/.github/.github/actions/setup-node-pnpm@main
        with:
          node-version: ${{ inputs.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}

      - name: Run linting
        run: ${{ inputs.lint-command }}

  typecheck:
    name: Type check
    if: inputs.run-typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Setup Node.js with pnpm
        uses: benhigham/.github/.github/actions/setup-node-pnpm@main
        with:
          node-version: ${{ inputs.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}

      - name: Run type checking
        run: ${{ inputs.typecheck-command }}

  test:
    name: Test${{ inputs.node-version-matrix && format(' (Node {0})', matrix.node-version) || '' }}
    if: inputs.run-test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        node-version: ${{ inputs.node-version-matrix && fromJSON(inputs.node-version-matrix) || fromJSON(format('["{0}"]', inputs.node-version || 'default')) }}
    steps:
      - name: Setup Node.js with pnpm
        uses: benhigham/.github/.github/actions/setup-node-pnpm@main
        with:
          node-version: ${{ matrix.node-version != 'default' && matrix.node-version || inputs.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}

      - name: Run tests
        run: ${{ inputs.test-command }}

      - name: Upload coverage reports
        if: inputs.upload-coverage && always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report${{ inputs.node-version-matrix && format('-node-{0}', matrix.node-version) || '' }}
          path: ${{ inputs.coverage-path }}
          retention-days: 30

  build:
    name: Build
    if: inputs.run-build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Setup Node.js with pnpm
        uses: benhigham/.github/.github/actions/setup-node-pnpm@main
        with:
          node-version: ${{ inputs.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}

      - name: Build
        run: ${{ inputs.build-command }}
