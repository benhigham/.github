name: First-Time Contributor Greeter

on:
  pull_request_target:
    types: [opened]
  issues:
    types: [opened]

permissions:
  pull-requests: write
  issues: write

concurrency:
  group: greeting-${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: false

jobs:
  greeting:
    name: Greet First-Time Contributors
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Greet first-time contributors
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue.number;
            const is_pr = context.eventName === 'pull_request_target';
            const is_issue = context.eventName === 'issues';

            // Get the author
            const author = context.payload.sender.login;

            // Check if this is the author's first contribution
            // Note: Fetching up to 100 items should be sufficient for most repositories.
            // For extremely active repos, this might miss older contributions, but it's a reasonable tradeoff.
            const { data: contributions } = is_pr
              ? await github.rest.pulls.list({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: 'all',
                  per_page: 100,
                })
              : await github.rest.issues.listForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  creator: author,
                  state: 'all',
                  per_page: 100,
                });

            // Count previous contributions by this author
            const previousContributions = contributions.filter(item => {
              if (is_pr) {
                // For PRs, check if authored by the same user and not the current PR
                return item.user.login === author && item.number !== issue_number;
              } else {
                // For issues, exclude the current issue and any pull requests
                return item.number !== issue_number && !item.pull_request;
              }
            });

            // Only greet if this is their first contribution
            if (previousContributions.length === 0) {
              const message = is_pr
                ? `👋 Thanks for opening your first pull request! We're excited to have you contribute.

            A maintainer will review your PR soon. In the meantime, please make sure:
            - [ ] Your code follows the project's style guidelines
            - [ ] You've added tests if applicable
            - [ ] You've updated documentation if needed
            - [ ] All CI checks pass

            Feel free to ask questions if you need any help! 🚀`
                : `👋 Thanks for opening your first issue! We appreciate you taking the time to report this.

            A maintainer will review your issue and respond as soon as possible. To help us address this quickly, please make sure you've provided:
            - A clear description of the issue
            - Steps to reproduce (if applicable)
            - Any relevant context or screenshots

            Thanks for contributing to the project! 🙏`;

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: message
              });

              console.log(`Greeted first-time contributor: ${author}`);
            } else {
              console.log(`Not a first-time contributor: ${author} (${previousContributions.length} previous contributions)`);
            }
